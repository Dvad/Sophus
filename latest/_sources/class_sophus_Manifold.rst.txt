.. index:: pair: class; sophus::Manifold
.. _doxid-classsophus_1_1_manifold:

template class sophus::Manifold
===============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Templated local parameterization for LieGroup [with implemented LieGroup::Dx_this_mul_exp_x_at_0() ]. :ref:`More...<details-classsophus_1_1_manifold>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <manifold.h>
	
	template <template<class, int=0> class TLieGroup>
	class Manifold: public Manifold {
	public:
		// typedefs
	
		using :target:`LieGroupF64<doxid-classsophus_1_1_manifold_1af0a372d91146a66a662b3c7f0c95e3a8>` = TLieGroup<double> ;
		using :target:`Tangent<doxid-classsophus_1_1_manifold_1adb3a43cd491039cb0b0b9427519295b1>` = typename LieGroupF64::Tangent ;
		using :target:`TangentMap<doxid-classsophus_1_1_manifold_1a045f8e89a3c9cab4df0d3f0bed413942>` = typename :ref:`sophus::Mapper<doxid-structsophus_1_1_mapper>`<:ref:`Tangent<doxid-classsophus_1_1_manifold_1adb3a43cd491039cb0b0b9427519295b1>`>::Map ;
		using :target:`TangentConstMap<doxid-classsophus_1_1_manifold_1aeababf372bcc3d1ec6160a21c5ff04c2>` = typename :ref:`sophus::Mapper<doxid-structsophus_1_1_mapper>`<:ref:`Tangent<doxid-classsophus_1_1_manifold_1adb3a43cd491039cb0b0b9427519295b1>`>::ConstMap ;

		// fields
	
		static constexpr int :target:`kDoF<doxid-classsophus_1_1_manifold_1a8832a6ad80d5f62660c7af08873a8324>` = LieGroupF64::kDoF;
		static constexpr int :target:`kNumParameters<doxid-classsophus_1_1_manifold_1af7e7c7974211852ad69f75dc10ece2b4>` = LieGroupF64::kNumParameters;

		// methods
	
		bool :ref:`Plus<doxid-classsophus_1_1_manifold_1a887a0a9e6c74d11856aa5efe1eaf2e16>`(double const* t_raw, double const* delta_raw, double* t_plus_delta_raw) const;
		bool :ref:`PlusJacobian<doxid-classsophus_1_1_manifold_1a735c9c491e2cdf9d796652c0f13934a1>`(double const* t_raw, double* jacobian_raw) const;
	
		bool :target:`Minus<doxid-classsophus_1_1_manifold_1ad58e49099acc0b9dc0f058ba503428ab>`(
			double const* y_raw,
			double const* x_raw,
			double* y_minus_x_raw
			) const;
	
		bool :target:`MinusJacobian<doxid-classsophus_1_1_manifold_1a38c281caef07493a18cb6f665dab24ae>`(
			double const* x_raw,
			double* jacobian_raw
			) const;
	
		int :target:`AmbientSize<doxid-classsophus_1_1_manifold_1a78b3b370f74f4126a071d6866dd8c623>`() const;
		int :target:`TangentSize<doxid-classsophus_1_1_manifold_1adb205e38cbe940e72c9b3bad8cf1adf4>`() const;
	};
.. _details-classsophus_1_1_manifold:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Templated local parameterization for LieGroup [with implemented LieGroup::Dx_this_mul_exp_x_at_0() ].

Methods
-------

.. index:: pair: function; Plus
.. _doxid-classsophus_1_1_manifold_1a887a0a9e6c74d11856aa5efe1eaf2e16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool Plus(
		double const* t_raw,
		double const* delta_raw,
		double* t_plus_delta_raw
		) const

LieGroup plus operation for Ceres.

T \* exp(x)

.. index:: pair: function; PlusJacobian
.. _doxid-classsophus_1_1_manifold_1a735c9c491e2cdf9d796652c0f13934a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool PlusJacobian(double const* t_raw, double* jacobian_raw) const

Jacobian of LieGroup plus operation for Ceres.

Dx T \* exp(x) with x=0

